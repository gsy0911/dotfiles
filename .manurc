iterm:line ## ⌃e ## go tail 
iterm:line ## ⌃j ## go middle
iterm:line ## ⌃a ## go head
iterm:line ## ⌘⇧h ## paste history
iterm:line ## ⌘k or ⌘r ## clear
iterm:tab ## ⌘t ## new tab
iterm:tab ## ⌘+(RL) ## move tabs
iterm:window ## ⌘r ## clear lines
iterm:window ## ⌘⌥+(RLUD) ## move window
iterm:window ## ⌘d ## split window vertically
iterm:window ## ⌘⇧d ## split window horizontally

db-mysql:login ## mysql -u {user} -D {database} -p {terminal} ## login
db-mysql:sql ## show columns from {table} ## show schema
db-psql:login ## psql -h {host} -U {user} -d {database} ## login
db-psql:update ## UPDATE {table} SET {column}={value} WHERE {column}={condition} ## update table

net:nslookup ## nslookup -type=ns [domain] ##
net:nslookup ## nslookup -type=a [domain] ##
net:traceroute ## traceroute [IP] ##

alias:dir ## cdp or ^p ## cd "$( ls -1d $HOME/Development/*/* | peco )"
alias:dir ## ls ## ls or exa
alias:dir ## l ## ls -CF or exa -F
alias:dir ## ll ## ls -l or exa -l
alias:dir ## la ## ls -a or exa -a
alias:dir ## lla ## ls -la or exa -la
alias:dir ## lt ## exa -lT --level=2 --git-ignore
alias:Makefile ## mp ## make | peco
alias:aws ## cred ## cat $HOME/.aws/credentials | grep "\[" | sed -e 's/\[//g' | sed -e 's/\]//g'
alias:aws ## set_cdk {profile-name} ## aws sts get-caller-identity --profile $1 | jq -r .Account
alias:cdk ## cdkld ## cdk deploy "$(cdk ls | grep $1 | peco)"
alias:cdk ## cdk_pkg_ver ## check compatibility package version
alias:node.js ## nsc ## cat package.json | jq ".scripts"
alias:docker ## dl {filter-word} ## docker images {| grep $1} | sort | awk | peco
alias:docker ## dr ## docker run --rm (-d) {CMD}
alias:docker ## ds ## docker stop $(docker ps -q)
alias:docker ## dcb ## docker-compose build
alias:docker ## dcu ## docker-compose up
alias:docker ## dcd ## docker-compose down
alias:docker ## dps ## docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Ports}}\t{{.Status}}"'
alias:docker ## drm ## docker system prune
alias:docker ## drmip ## docker rmi $(docker images | peco | awk '{print $3}')
alias:docker ## trp ## trivy --severity=HIGH,CRITICAL --ignore-unfixed=true {peco chosen}
usage:docker ## - ## choose and run: dl {filter-word} && dr $li {CMD}

usage:av-antivirus ## sudo freshclam ## update virus definition
usage:av-antivirus ## clamdscan --infected /{path} ## scan {path}
